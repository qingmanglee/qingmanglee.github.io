<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>轻芒的博客</title>
  
  <subtitle>爱编程、爱分享</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-07T07:10:41.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>轻芒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>58沈剑的《架构师之路》学习笔记</title>
    <link href="http://yoursite.com/2017/11/05/58%E6%B2%88%E5%89%91%E7%9A%84%E3%80%8A%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E8%B7%AF%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/11/05/58沈剑的《架构师之路》学习笔记/</id>
    <published>2017-11-05T08:59:37.000Z</published>
    <updated>2017-11-07T07:10:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前段时间关注了58沈剑大牛的“架构师之路”的微信公众号，之前一直没时间认真拜读，现打算利用周末的时间学习一下，做一些笔记。本篇内容全部来自《架构师之路》，我只是在此摘抄记录一些知识点。感谢沈剑大牛的分享。</strong></p><h3 id="高可用架构"><a href="#高可用架构" class="headerlink" title="高可用架构"></a>高可用架构</h3><p>高可用HA（High Availability）是分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计减少系统不能提供服务的时间。</p><p>方法论上，高可用是通过冗余+自动故障转移来实现的。<br>整个互联网分层系统架构的高可用，又是通过每一层的冗余+自动故障转移来综合实现的，具体的：</p><ol><li>【客户端层】到【反向代理层】的高可用，是通过反向代理层的冗余实现的，常见实践是keepalived + virtual IP自动故障转移</li><li>【反向代理层】到【站点层】的高可用，是通过站点层的冗余实现的，常见实践是nginx与web-server之间的存活性探测与自动故障转移</li><li>【站点层】到【服务层】的高可用，是通过服务层的冗余实现的，常见实践是通过service-connection-pool来保证自动故障转移</li><li>【服务层】到【缓存层】的高可用，是通过缓存数据的冗余实现的，常见实践是缓存客户端双读双写，或者利用缓存集群的主从数据同步与sentinel保活与自动故障转移；更多的业务场景，对缓存没有高可用要求，可以使用缓存服务化来对调用方屏蔽底层复杂性</li><li>【服务层】到【数据库“读”】的高可用，是通过读库的冗余实现的，常见实践是通过db-connection-pool来保证自动故障转移</li><li>【服务层】到【数据库“写”】的高可用，是通过写库的冗余实现的，常见实践是keepalived + virtual IP自动故障转移</li></ol><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>负载均衡（Load Balance）是分布式系统架构设计中必须考虑的因素之一，它通常是指，将请求/数据【均匀】分摊到多个操作单元上执行，负载均衡的关键在于【均匀】。</p><ol><li>【客户端层】到【反向代理层】的负载均衡，是通过“DNS轮询”实现的</li><li>【反向代理层】到【站点层】的负载均衡，是通过“nginx”实现的</li><li>【站点层】到【服务层】的负载均衡，是通过“服务连接池”实现的</li><li>【数据层】的负载均衡，要考虑“数据的均衡”与“请求的均衡”两个点，常见的方式有“按照范围水平切分”与“hash水平切分”</li></ol><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul><li>数据库使用规范<ul><li>参见公众号里的文章《58到家数据库30条军规解读》</li></ul></li><li>分库<ol><li>hash取模：user_id%2=0为0库，user_id%2=1为1库。</li><li>数据分段：user_id属于[0, 1亿]为0库，属于[1亿, 2亿]为2库。</li><li>引入像mycat等数据库中间件</li></ol></li><li>保证数据的安全性是DBA第一要务，需要进行：<ol><li>全量备份+增量备份，并定期进行恢复演练，但该方案恢复时间较久，对系统可用性影响大</li><li>1小时延时从，双份1小时延时从能极大加速数据库恢复时间</li><li>个人建议1小时延时从足够，后台只读服务可以连1小时延时从，提高资源利用率</li></ol></li></ul><h3 id="线程数究竟设多少合理"><a href="#线程数究竟设多少合理" class="headerlink" title="线程数究竟设多少合理"></a>线程数究竟设多少合理</h3><ul><li>结论：N核服务器，通过执行业务的单线程分析出本地计算时间为x，等待时间为y，则工作线程数（线程池线程数）设置为 N*(x+y)/x，能让CPU的利用率最大化。</li><li>经验：一般来说，非CPU密集型的业务（加解密、压缩解压缩、搜索排序等业务是CPU密集型的业务），瓶颈都在后端数据库，本地CPU计算的时间很少，所以设置几十或者几百个工作线程也都是可能的。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;前段时间关注了58沈剑大牛的“架构师之路”的微信公众号，之前一直没时间认真拜读，现打算利用周末的时间学习一下，做一些笔记。本篇内容全部来自《架构师之路》，我只是在此摘抄记录一些知识点。感谢沈剑大牛的分享。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;高可用架构
      
    
    </summary>
    
      <category term="架构" scheme="http://yoursite.com/categories/%E6%9E%B6%E6%9E%84/"/>
    
    
      <category term="架构" scheme="http://yoursite.com/tags/%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式基础</title>
    <link href="http://yoursite.com/2016/08/06/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/08/06/正则表达式基础/</id>
    <published>2016-08-06T11:00:25.000Z</published>
    <updated>2017-11-07T07:20:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p><blockquote><p><a href="http://www.xiaoleilu.com/regex-guide/" target="_blank" rel="external">正则表达式简明参考</a></p><p><a href="http://php.net/manual/zh/reference.pcre.pattern.modifiers.php" target="_blank" rel="external">PHP手册 模式修饰符</a></p><p><a href="http://deerchao.net/tutorials/regex/regex.htm#mission" target="_blank" rel="external">正则表达式30分钟入门教程</a></p></blockquote><p><em>正则表达式在处理字符串以及一些软件配置的时候都非常有用，但隔段时间不用，就生疏了。今天抽空回顾和整理了下正则的基础知识，以便以后回顾。</em></p><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><p>常见的元字符:</p><table><thead><tr><th>元字符</th><th>解释</th><th>备注</th></tr></thead><tbody><tr><td>.</td><td>匹配除换行符以外的任意字符</td><td></td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次</td><td></td></tr><tr><td>*</td><td>匹配前面的表达式零次或多次</td><td></td></tr><tr><td>{n}; {n,}; {n,m}</td><td>匹配n次; 至少匹配n次; 至少匹配n次，最多匹配m次;</td><td></td></tr><tr><td>\w</td><td>匹配字母、数字、下划线。等价于’[A-Za-z0-9_]’</td><td></td></tr><tr><td>\W</td><td>匹配非字母、非数字、非下划线。等价于’[^A-Za-z0-9_]’</td><td>反义</td></tr><tr><td>\s</td><td>匹配任意的空白符</td><td></td></tr><tr><td>\S</td><td>匹配任意的非空白符</td><td>反义</td></tr><tr><td>\d</td><td>匹配数字</td><td></td></tr><tr><td>\D</td><td>匹配非数字</td><td>反义</td></tr><tr><td>\b</td><td>匹配单词边界</td><td></td></tr><tr><td>\B</td><td>匹配非单词边界</td><td>反义</td></tr><tr><td>^</td><td>匹配字符串的开始</td><td>[^abc]匹配除abc以外的任意字符，此为反义</td></tr><tr><td>$</td><td>匹配字符串的结束</td><td></td></tr></tbody></table><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>想要在正则中用元字符本身，则可以通过\进行转义。\本身可通过\来转义</p><h3 id="分支条件"><a href="#分支条件" class="headerlink" title="分支条件"></a>分支条件</h3><p>表达式|表达式，从左到右满足第一个表达式则不在匹配。</p><h3 id="分组-amp-反向引用"><a href="#分组-amp-反向引用" class="headerlink" title="分组&amp;反向引用"></a>分组&amp;反向引用</h3><p>\b(\w+)\b\s+\1\b 用来匹配重复的单词，\1就是分组1，括号里面捕获的内容。</p><h3 id="零宽断言（正向和负向）"><a href="#零宽断言（正向和负向）" class="headerlink" title="零宽断言（正向和负向）"></a>零宽断言（正向和负向）</h3><p>零宽断言表示匹配字符的时候再添加一些定位条件，使匹配更精准。</p><ul><li>\w+(?=ing) 匹配以ing结尾的多个字符（不包括ing）</li><li>\w+(?!ing) 匹配不是以ing结尾的多个字符</li><li>(?&lt;=re)\w+ 匹配以re开头的多个字符（不包括re）</li><li>(?&lt;!re)\w+ 匹配不是以re开头的多个字符</li><li>(?&lt;=\s)\d+(?=\s) 匹配两边是空白符的数字，不包括空白符</li></ul><h3 id="贪婪-amp-懒惰"><a href="#贪婪-amp-懒惰" class="headerlink" title="贪婪&amp;懒惰"></a>贪婪&amp;懒惰</h3><p>小例子：<br>字符串： AxxByyAxxB<br>A.<em>B ：匹配到AxxByyAxxB<br>A.</em>?B ：匹配到AxxB</p><ul><li>贪婪 {m,n}、{m,}、?、*、+</li><li>懒惰 {m,n}?、{m,}?、??、*?、+?， 尽可能少的匹配</li></ul><h3 id="模式修饰符"><a href="#模式修饰符" class="headerlink" title="模式修饰符"></a>模式修饰符</h3><p>详见：<a href="http://php.net/manual/zh/reference.pcre.pattern.modifiers.php" target="_blank" rel="external">http://php.net/manual/zh/reference.pcre.pattern.modifiers.php</a></p><ul><li>i：忽略大小写(CASE_INSENSITIVE)</li><li>x：忽略空格字符(COMMENTS)</li><li>s：.匹配任意字符，包括换行符（DOTALL）</li><li>m：多行模式（MULTILINE）</li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>注释语法：(?#comment)，这个语法的内容会被正则忽略，用于注释含义。可以放在正则表达式的任意位置。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xiaoleilu.com/regex-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式简明参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http
      
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="正则表达式" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>关于编程</title>
    <link href="http://yoursite.com/2016/08/05/%E5%85%B3%E4%BA%8E%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/08/05/关于编程/</id>
    <published>2016-08-05T07:21:09.000Z</published>
    <updated>2017-11-07T07:30:19.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>看别人的代码，是一种非常有效的学习，可以扩展自己的思路</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;看别人的代码，是一种非常有效的学习，可以扩展自己的思路&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="感悟" scheme="http://yoursite.com/categories/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="http://yoursite.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="编程人生" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>《浪潮之巅》读后小结</title>
    <link href="http://yoursite.com/2016/07/07/%E3%80%8A%E6%B5%AA%E6%BD%AE%E4%B9%8B%E5%B7%85%E3%80%8B%E8%AF%BB%E5%90%8E%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2016/07/07/《浪潮之巅》读后小结/</id>
    <published>2016-07-07T03:51:14.000Z</published>
    <updated>2017-11-09T05:04:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>《浪潮之巅》应该是我迄今为止，遇到的最喜欢的书了，可能源自对世界之巅的巨头公司的崇拜。这本书主要是讲近百年来这些巨头公司的兴衰。我从中摘抄了一些我印象比较深的一些话，可能并非书中原话，但我感觉差不多也就是这个意思。</p><h4 id="AT-amp-T"><a href="#AT-amp-T" class="headerlink" title="AT&amp;T"></a>AT&amp;T</h4><ul><li>时代造就了伟大的公司（乱世出英雄，顺应时代，顺势而为）</li><li>当一个公司，没有人、机构、有绝对的控制权并为它负责的时候，这个公司就危险了</li><li>看一个上市公司的好坏，只要看最优秀的人，是流进这家公司还是流出这家公司即可</li></ul><h4 id="IBM"><a href="#IBM" class="headerlink" title="IBM"></a>IBM</h4><ul><li>IBM不断的优化甚至淘汰，长期亏损和不盈利的非核心业务</li></ul><h4 id="Apple"><a href="#Apple" class="headerlink" title="Apple"></a>Apple</h4><ul><li>永远渴望，大智若愚</li></ul><h4 id="Microsoft"><a href="#Microsoft" class="headerlink" title="Microsoft"></a>Microsoft</h4><ul><li>高手过招取胜之道，在于抓住对手的失误</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《浪潮之巅》应该是我迄今为止，遇到的最喜欢的书了，可能源自对世界之巅的巨头公司的崇拜。这本书主要是讲近百年来这些巨头公司的兴衰。我从中摘抄了一些我印象比较深的一些话，可能并非书中原话，但我感觉差不多也就是这个意思。&lt;/p&gt;
&lt;h4 id=&quot;AT-amp-T&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="读书" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="浪潮之巅" scheme="http://yoursite.com/tags/%E6%B5%AA%E6%BD%AE%E4%B9%8B%E5%B7%85/"/>
    
      <category term="读书" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>关于职场</title>
    <link href="http://yoursite.com/2016/07/01/%E5%85%B3%E4%BA%8E%E8%81%8C%E5%9C%BA/"/>
    <id>http://yoursite.com/2016/07/01/关于职场/</id>
    <published>2016-07-01T07:25:27.000Z</published>
    <updated>2017-11-07T11:58:50.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>善于倾听，尤其是别人的意见甚至是批评，这是提高自己的最佳途径，工作之后给自己提建议的人并不多。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;善于倾听，尤其是别人的意见甚至是批评，这是提高自己的最佳途径，工作之后给自己提建议的人并不多。&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="感悟" scheme="http://yoursite.com/categories/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="http://yoursite.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="职场生涯" scheme="http://yoursite.com/tags/%E8%81%8C%E5%9C%BA%E7%94%9F%E6%B6%AF/"/>
    
  </entry>
  
</feed>
